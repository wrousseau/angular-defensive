{"version":3,"sources":["angular-defensive.min.js","/source/angular-defensive.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","global","factory","exports","module","define","amd","angularDefensive","this","HTTP","WeakMap","Q$1","TEMPLATE_CACHE","DefensiveConfiguration","$http","$q","$templateCache","set","configurations","value","configurationName","configuration","Configuration","confCase","self","Promise","resolve","hasOwnProperty","template","get","templateUrl","cache","headers","Accept","then","response","data","check","deferred","defer","when","result","reject","promise","cases","slice","_loop","shift","promiseWrap","getTemplate","push","$inject","Q","CONNECTION_STATUS","CheckPreset","connectionStatus","isOnline","navigator","geolocation","getCurrentPosition","moduleName$2","angular","service","COMPILE","DEFENSIVE_CONFIGURATION","NgDefensive","$compile","restrict","scope","element","attrs","activeCase","getDefensiveCase","ngDefensive","replaceWith","action","$eval","ngDefensiveCallbacks","caseName","moduleName$1","directive","moduleName"],"mappings":"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","file":"angular-defensive.min.js","sourcesContent":["var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.angularDefensive = factory();\n})(this, function () {\n\t'use strict';\n\n\tvar HTTP = new WeakMap();\n\tvar Q$1 = new WeakMap();\n\tvar TEMPLATE_CACHE = new WeakMap();\n\n\tvar DefensiveConfiguration = (function () {\n\n\t\t/*@ngInject*/\n\n\t\tfunction DefensiveConfiguration($http, $q, $templateCache) {\n\t\t\t_classCallCheck(this, DefensiveConfiguration);\n\n\t\t\tHTTP.set(this, $http);\n\t\t\tQ$1.set(this, $q);\n\t\t\tTEMPLATE_CACHE.set(this, $templateCache);\n\t\t\tthis.configurations = {};\n\t\t}\n\n\t\t_createClass(DefensiveConfiguration, [{\n\t\t\tkey: 'registerConfiguration',\n\t\t\tvalue: function registerConfiguration(configurationName) {\n\t\t\t\tvar configuration = new this.Configuration();\n\t\t\t\tthis.configurations[configurationName] = configuration;\n\t\t\t\treturn configuration;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'getTemplate',\n\t\t\tvalue: function getTemplate(confCase) {\n\t\t\t\tvar self = this;\n\t\t\t\treturn new Promise(function (resolve) {\n\t\t\t\t\tif (confCase.hasOwnProperty('template')) {\n\t\t\t\t\t\tresolve(confCase.template);\n\t\t\t\t\t} else if (confCase.hasOwnProperty('templateUrl')) {\n\t\t\t\t\t\tHTTP.get(self).get(confCase.templateUrl, {\n\t\t\t\t\t\t\tcache: TEMPLATE_CACHE.get(self),\n\t\t\t\t\t\t\theaders: { Accept: 'text/html' }\n\t\t\t\t\t\t}).then(function (response) {\n\t\t\t\t\t\t\tresolve(response.data);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'promiseWrap',\n\t\t\tvalue: function promiseWrap(check) {\n\t\t\t\tvar deferred = Q$1.get(this).defer();\n\t\t\t\tQ$1.get(this).when(check()).then(function (result) {\n\t\t\t\t\tif (result === false) {\n\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdeferred.resolve();\n\t\t\t\t\t}\n\t\t\t\t})['catch'](function () {\n\t\t\t\t\tdeferred.reject();\n\t\t\t\t});\n\t\t\t\treturn deferred.promise;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'getDefensiveCase',\n\t\t\tvalue: function getDefensiveCase(configurationName) {\n\t\t\t\tvar self = this;\n\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\tif (!self.configurations.hasOwnProperty(configurationName)) {\n\t\t\t\t\t\treturn reject('Configuration ' + configurationName + ' does not exist');\n\t\t\t\t\t}\n\t\t\t\t\tvar cases = self.configurations[configurationName].cases.slice();\n\n\t\t\t\t\tvar _loop = function () {\n\t\t\t\t\t\tvar confCase = cases.shift();\n\t\t\t\t\t\tself.promiseWrap(confCase.check).then(function () {\n\t\t\t\t\t\t\treturn self.getTemplate(confCase);\n\t\t\t\t\t\t}).then(function (template) {\n\t\t\t\t\t\t\tconfCase.template = template;\n\t\t\t\t\t\t\treturn resolve(confCase);\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\n\t\t\t\t\twhile (cases.length) {\n\t\t\t\t\t\t_loop();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'Configuration',\n\t\t\tget: function get() {\n\t\t\t\treturn DefensiveConfiguration.Configuration;\n\t\t\t}\n\t\t}], [{\n\t\t\tkey: 'Configuration',\n\t\t\tget: function get() {\n\t\t\t\treturn (function () {\n\t\t\t\t\tfunction Configuration() {\n\t\t\t\t\t\t_classCallCheck(this, Configuration);\n\n\t\t\t\t\t\tthis.cases = [];\n\t\t\t\t\t}\n\n\t\t\t\t\t_createClass(Configuration, [{\n\t\t\t\t\t\tkey: 'addCase',\n\t\t\t\t\t\tvalue: function addCase(confCase) {\n\t\t\t\t\t\t\tthis.cases.push(confCase);\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t\t}\n\t\t\t\t\t}]);\n\n\t\t\t\t\treturn Configuration;\n\t\t\t\t})();\n\t\t\t}\n\t\t}]);\n\n\t\treturn DefensiveConfiguration;\n\t})();\n\n\tDefensiveConfiguration.$inject = ['$http', '$q', '$templateCache'];\n\n\tvar Q = new WeakMap();\n\tvar CONNECTION_STATUS = new WeakMap();\n\n\tvar CheckPreset = (function () {\n\n\t\t/*@ngInject*/\n\n\t\tfunction CheckPreset($q, connectionStatus) {\n\t\t\t_classCallCheck(this, CheckPreset);\n\n\t\t\tQ.set(this, $q);\n\t\t\tCONNECTION_STATUS.set(this, connectionStatus);\n\t\t}\n\n\t\t_createClass(CheckPreset, [{\n\t\t\tkey: 'noNetwork',\n\t\t\tvalue: function noNetwork() {\n\t\t\t\treturn !CONNECTION_STATUS.get(this).isOnline();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'geolocationNotSupported',\n\t\t\tvalue: function geolocationNotSupported() {\n\t\t\t\treturn !navigator.geolocation;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'geolocationNotAvailable',\n\t\t\tvalue: function geolocationNotAvailable() {\n\t\t\t\tvar deferred = Q.get(this).defer();\n\t\t\t\tif (navigator.geolocation) {\n\t\t\t\t\tnavigator.geolocation.getCurrentPosition(function () {\n\t\t\t\t\t\tdeferred.reject();\n\t\t\t\t\t}, function () {\n\t\t\t\t\t\tdeferred.resolve();\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.resolve();\n\t\t\t\t}\n\t\t\t\treturn deferred.promise;\n\t\t\t}\n\t\t}]);\n\n\t\treturn CheckPreset;\n\t})();\n\n\tCheckPreset.$inject = ['$q', 'connectionStatus'];\n\n\tvar moduleName$2 = 'ngDefensive.services';\n\n\tangular.module(moduleName$2, ['offline']).service('CheckPreset', CheckPreset).service('DefensiveConfiguration', DefensiveConfiguration);\n\n\tvar COMPILE = new WeakMap();\n\tvar DEFENSIVE_CONFIGURATION = new WeakMap();\n\n\tvar NgDefensive = (function () {\n\n\t\t/*@ngInject*/\n\n\t\tfunction NgDefensive($compile, DefensiveConfiguration) {\n\t\t\t_classCallCheck(this, NgDefensive);\n\n\t\t\tthis.restrict = 'A';\n\t\t\tCOMPILE.set(this, $compile);\n\t\t\tDEFENSIVE_CONFIGURATION.set(this, DefensiveConfiguration);\n\t\t}\n\n\t\t_createClass(NgDefensive, [{\n\t\t\tkey: 'link',\n\t\t\tvalue: function link(scope, element, attrs) {\n\t\t\t\tvar activeCase = null;\n\t\t\t\tvar DefensiveConfiguration = DEFENSIVE_CONFIGURATION.get(NgDefensive.instance);\n\t\t\t\tDefensiveConfiguration.getDefensiveCase(attrs.ngDefensive).then(function (confCase) {\n\t\t\t\t\tvar $compile = COMPILE.get(NgDefensive.instance);\n\t\t\t\t\telement.replaceWith($compile(confCase.template)(scope));\n\t\t\t\t\tactiveCase = confCase;\n\t\t\t\t});\n\t\t\t\tscope.action = function () {\n\t\t\t\t\tscope.$eval(attrs.ngDefensiveCallbacks)[activeCase.caseName]();\n\t\t\t\t};\n\t\t\t}\n\t\t}], [{\n\t\t\tkey: 'factory',\n\t\t\tvalue: function factory($compile, DefensiveConfiguration) {\n\t\t\t\tNgDefensive.instance = new NgDefensive($compile, DefensiveConfiguration);\n\t\t\t\treturn NgDefensive.instance;\n\t\t\t}\n\t\t}]);\n\n\t\treturn NgDefensive;\n\t})();\n\n\tNgDefensive.factory.$inject = ['$compile', 'DefensiveConfiguration'];\n\n\tvar moduleName$1 = 'ngDefensive.directives';\n\n\tangular.module(moduleName$1, []).directive('ngDefensive', NgDefensive.factory);\n\n\tvar moduleName = 'ngDefensive';\n\n\tvar app = angular.module(moduleName, [moduleName$1, moduleName$2]);\n\n\treturn moduleName;\n});\n//# sourceMappingURL=angular-defensive.js.map\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\tglobal.angularDefensive = factory();\n}(this, function () { 'use strict';\n\n\tconst HTTP = new WeakMap();\n\tconst Q$1 = new WeakMap();\n\tconst TEMPLATE_CACHE = new WeakMap();\n\n\tclass DefensiveConfiguration {\n\n\t  /*@ngInject*/\n\t  constructor($http, $q, $templateCache) {\n\t    HTTP.set(this, $http);\n\t    Q$1.set(this, $q);\n\t    TEMPLATE_CACHE.set(this, $templateCache);\n\t    this.configurations = {};\n\t  }\n\n\t  static get Configuration() {\n\t    return class Configuration {\n\t      constructor() {\n\t        this.cases = [];\n\t      }\n\n\t      addCase(confCase) {\n\t        this.cases.push(confCase);\n\t        return this;\n\t      }\n\t    };\n\t  }\n\n\t  get Configuration() {\n\t    return DefensiveConfiguration.Configuration;\n\t  }\n\n\t  registerConfiguration(configurationName) {\n\t    let configuration = new this.Configuration();\n\t    this.configurations[configurationName] = configuration;\n\t    return configuration;\n\t  }\n\n\t  getTemplate(confCase) {\n\t    let self = this;\n\t    return new Promise(function(resolve) {\n\t      if (confCase.hasOwnProperty('template')) {\n\t        resolve(confCase.template);\n\t      } else if (confCase.hasOwnProperty('templateUrl')) {\n\t        HTTP.get(self)\n\t        .get(confCase.templateUrl, {\n\t          cache: TEMPLATE_CACHE.get(self),\n\t          headers: {Accept: 'text/html'}\n\t        })\n\t        .then(function(response) {\n\t          resolve(response.data);\n\t        });\n\t      }\n\t    });\n\t  }\n\n\t  promiseWrap(check) {\n\t    let deferred = Q$1.get(this).defer();\n\t    Q$1.get(this).when(check())\n\t    .then(function(result) {\n\t      if (result === false) {\n\t        deferred.reject();\n\t      } else {\n\t        deferred.resolve();\n\t      }\n\t    })\n\t    .catch(function() {\n\t      deferred.reject();\n\t    });\n\t    return deferred.promise;\n\t  }\n\n\t  getDefensiveCase(configurationName) {\n\t    let self = this;\n\t    return new Promise(function(resolve, reject) {\n\t      if (!self.configurations.hasOwnProperty(configurationName)) {\n\t        return reject(`Configuration ${configurationName} does not exist`);\n\t      }\n\t      let cases = self.configurations[configurationName].cases.slice();\n\t      while (cases.length) {\n\t        let confCase = cases.shift();\n\t        self.promiseWrap(confCase.check)\n\t        .then(function() {\n\t          return self.getTemplate(confCase);\n\t        })\n\t        .then(function(template) {\n\t          confCase.template = template;\n\t          return resolve(confCase);\n\t        });\n\t      }\n\t    });\n\t  }\n\n\t}\n\n\tDefensiveConfiguration.$inject = ['$http', '$q', '$templateCache'];\n\n\tconst Q = new WeakMap();\n\tconst CONNECTION_STATUS = new WeakMap();\n\n\tclass CheckPreset {\n\n\t  /*@ngInject*/\n\t  constructor($q, connectionStatus) {\n\t    Q.set(this, $q);\n\t    CONNECTION_STATUS.set(this, connectionStatus);\n\t  }\n\n\t  noNetwork() {\n\t    return !CONNECTION_STATUS.get(this).isOnline();\n\t  }\n\n\t  geolocationNotSupported() {\n\t    return !navigator.geolocation;\n\t  }\n\n\t  geolocationNotAvailable() {\n\t    let deferred = Q.get(this).defer();\n\t    if (navigator.geolocation) {\n\t      navigator.geolocation.getCurrentPosition(function() {\n\t        deferred.reject();\n\t      }, function() {\n\t        deferred.resolve();\n\t      });\n\t    } else {\n\t      deferred.resolve();\n\t    }\n\t    return deferred.promise;\n\t  }\n\n\t}\n\n\tCheckPreset.$inject = ['$q', 'connectionStatus'];\n\n\tvar moduleName$2 = 'ngDefensive.services';\n\n\tangular.module(moduleName$2, ['offline'])\n\t  .service('CheckPreset', CheckPreset)\n\t  .service('DefensiveConfiguration', DefensiveConfiguration);\n\n\tconst COMPILE = new WeakMap();\n\tconst DEFENSIVE_CONFIGURATION = new WeakMap();\n\n\tclass NgDefensive {\n\n\t  /*@ngInject*/\n\t  constructor($compile, DefensiveConfiguration) {\n\t    this.restrict = 'A';\n\t    COMPILE.set(this, $compile);\n\t    DEFENSIVE_CONFIGURATION.set(this, DefensiveConfiguration);\n\t  }\n\n\t  link(scope, element, attrs) {\n\t    let activeCase = null;\n\t    let DefensiveConfiguration = DEFENSIVE_CONFIGURATION.get(NgDefensive.instance);\n\t    DefensiveConfiguration.getDefensiveCase(attrs.ngDefensive)\n\t    .then(function(confCase) {\n\t      let $compile = COMPILE.get(NgDefensive.instance);\n\t      element.replaceWith($compile(confCase.template)(scope));\n\t      activeCase = confCase;\n\t    });\n\t    scope.action = function() {\n\t      scope.$eval(attrs.ngDefensiveCallbacks)[activeCase.caseName]();\n\t    };\n\t  }\n\n\t  static factory($compile, DefensiveConfiguration) {\n\t    NgDefensive.instance = new NgDefensive($compile, DefensiveConfiguration);\n\t    return NgDefensive.instance;\n\t  }\n\n\t}\n\n\tNgDefensive.factory.$inject = [\n\t  '$compile',\n\t  'DefensiveConfiguration'\n\t];\n\n\tvar moduleName$1 = 'ngDefensive.directives';\n\n\tangular.module(moduleName$1, [])\n\t  .directive('ngDefensive', NgDefensive.factory);\n\n\tvar moduleName = 'ngDefensive';\n\n\tvar app = angular.module(moduleName, [\n\t\tmoduleName$1,\n\t\tmoduleName$2\n\t]);\n\n\treturn moduleName;\n\n}));"],"sourceRoot":"/source/"}