{"version":3,"sources":["angular-defensive.min.js","/source/angular-defensive.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","global","factory","exports","module","define","amd","angularDefensive","this","DefensiveConfiguration","configurations","value","configurationName","configuration","Configuration","$http","$templateCache","getTemplate","confCase","Promise","resolve","hasOwnProperty","template","get","templateUrl","cache","headers","Accept","then","response","data","getDefensiveCase","self","reject","_loop","cases","shift","check","v","_ret","push","moduleName$2","angular","provider","NgDefensive","$compile","restrict","scope","callbacks","link","element","attrs","activeCase","ngDefensive","replaceWith","action","caseName","moduleName$1","directive","moduleName"],"mappings":"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","file":"angular-defensive.min.js","sourcesContent":["var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.angularDefensive = factory();\n})(this, function () {\n\t'use strict';\n\n\tvar DefensiveConfiguration = (function () {\n\t\tfunction DefensiveConfiguration() {\n\t\t\t_classCallCheck(this, DefensiveConfiguration);\n\n\t\t\tthis.configurations = {};\n\t\t}\n\n\t\t_createClass(DefensiveConfiguration, [{\n\t\t\tkey: 'registerConfiguration',\n\t\t\tvalue: function registerConfiguration(configurationName) {\n\t\t\t\tvar configuration = new this.Configuration();\n\t\t\t\tthis.configurations[configurationName] = configuration;\n\t\t\t\treturn configuration;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: '$get',\n\t\t\tvalue: function $get($http, $templateCache) {\n\t\t\t\tvar configurations = this.configurations;\n\t\t\t\treturn {\n\t\t\t\t\tgetTemplate: function getTemplate(confCase) {\n\t\t\t\t\t\treturn new Promise(function (resolve) {\n\t\t\t\t\t\t\tif (confCase.hasOwnProperty('template')) {\n\t\t\t\t\t\t\t\tresolve(confCase.template);\n\t\t\t\t\t\t\t} else if (confCase.hasOwnProperty('templateUrl')) {\n\t\t\t\t\t\t\t\t$http.get(confCase.templateUrl, {\n\t\t\t\t\t\t\t\t\tcache: $templateCache,\n\t\t\t\t\t\t\t\t\theaders: { Accept: 'text/html' }\n\t\t\t\t\t\t\t\t}).then(function (response) {\n\t\t\t\t\t\t\t\t\tresolve(response.data);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tgetDefensiveCase: function getDefensiveCase(configurationName) {\n\t\t\t\t\t\tvar self = this;\n\t\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\t\tif (!configurations.hasOwnProperty(configurationName)) {\n\t\t\t\t\t\t\t\treturn reject('Configuration ' + configurationName + ' does not exist');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar configuration = configurations[configurationName];\n\n\t\t\t\t\t\t\tvar _loop = function () {\n\t\t\t\t\t\t\t\tvar confCase = configuration.cases.shift();\n\t\t\t\t\t\t\t\tif (confCase.check()) {\n\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\tv: self.getTemplate(confCase).then(function (template) {\n\t\t\t\t\t\t\t\t\t\t\tconfCase.template = template;\n\t\t\t\t\t\t\t\t\t\t\treturn resolve(confCase);\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\twhile (configuration.cases.length) {\n\t\t\t\t\t\t\t\tvar _ret = _loop();\n\n\t\t\t\t\t\t\t\tif (typeof _ret === 'object') return _ret.v;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'Configuration',\n\t\t\tget: function get() {\n\t\t\t\treturn DefensiveConfiguration.Configuration;\n\t\t\t}\n\t\t}], [{\n\t\t\tkey: 'factory',\n\t\t\tvalue: function factory() {\n\t\t\t\treturn new DefensiveConfiguration();\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'Configuration',\n\t\t\tget: function get() {\n\t\t\t\treturn (function () {\n\t\t\t\t\tfunction Configuration() {\n\t\t\t\t\t\t_classCallCheck(this, Configuration);\n\n\t\t\t\t\t\tthis.cases = [];\n\t\t\t\t\t}\n\n\t\t\t\t\t_createClass(Configuration, [{\n\t\t\t\t\t\tkey: 'addCase',\n\t\t\t\t\t\tvalue: function addCase(confCase) {\n\t\t\t\t\t\t\tthis.cases.push(confCase);\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t\t}\n\t\t\t\t\t}]);\n\n\t\t\t\t\treturn Configuration;\n\t\t\t\t})();\n\t\t\t}\n\t\t}]);\n\n\t\treturn DefensiveConfiguration;\n\t})();\n\n\tvar moduleName$2 = 'ngDefensive.services';\n\n\tangular.module(moduleName$2, []).provider('DefensiveConfiguration', DefensiveConfiguration.factory);\n\n\tvar NgDefensive = (function () {\n\t\tfunction NgDefensive($compile, DefensiveConfiguration) {\n\t\t\t_classCallCheck(this, NgDefensive);\n\n\t\t\tthis.restrict = 'A';\n\t\t\tthis.scope = {\n\t\t\t\tcallbacks: '=ngDefensiveCallbacks'\n\t\t\t};\n\t\t\tthis.link = function (scope, element, attrs) {\n\t\t\t\tvar activeCase = null;\n\t\t\t\tDefensiveConfiguration.getDefensiveCase(attrs.ngDefensive).then(function (confCase) {\n\t\t\t\t\telement.replaceWith($compile(confCase.template)(scope));\n\t\t\t\t\tactiveCase = confCase;\n\t\t\t\t});\n\t\t\t\tscope.action = function () {\n\t\t\t\t\tscope.callbacks[activeCase.caseName]();\n\t\t\t\t};\n\t\t\t};\n\t\t}\n\n\t\t_createClass(NgDefensive, null, [{\n\t\t\tkey: 'factory',\n\t\t\tvalue: function factory($compile, DefensiveConfiguration) {\n\t\t\t\treturn new NgDefensive($compile, DefensiveConfiguration);\n\t\t\t}\n\t\t}]);\n\n\t\treturn NgDefensive;\n\t})();\n\n\tvar moduleName$1 = 'ngDefensive.directives';\n\n\tangular.module(moduleName$1, []).directive('ngDefensive', NgDefensive.factory);\n\n\tvar moduleName = 'ngDefensive';\n\n\tvar app = angular.module(moduleName, [moduleName$1, moduleName$2]);\n\n\treturn moduleName;\n});\n//# sourceMappingURL=angular-defensive.js.map\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\tglobal.angularDefensive = factory();\n}(this, function () { 'use strict';\n\n\tclass DefensiveConfiguration {\n\n\t  constructor() {\n\t    this.configurations = {};\n\t  }\n\n\t  static get Configuration() {\n\t    return class Configuration {\n\t      constructor() {\n\t        this.cases = [];\n\t      }\n\n\t      addCase(confCase) {\n\t        this.cases.push(confCase);\n\t        return this;\n\t      }\n\t    };\n\t  }\n\n\t  get Configuration() {\n\t    return DefensiveConfiguration.Configuration;\n\t  }\n\n\t  registerConfiguration(configurationName) {\n\t    let configuration = new this.Configuration();\n\t    this.configurations[configurationName] = configuration;\n\t    return configuration;\n\t  }\n\n\t  $get($http, $templateCache) {\n\t    let configurations = this.configurations;\n\t    return {\n\t      getTemplate(confCase) {\n\t        return new Promise(function(resolve) {\n\t          if (confCase.hasOwnProperty('template')) {\n\t            resolve(confCase.template);\n\t          } else if (confCase.hasOwnProperty('templateUrl')) {\n\t            $http\n\t              .get(confCase.templateUrl, {\n\t                cache: $templateCache,\n\t                headers: {Accept: 'text/html'}\n\t              })\n\t              .then(function(response) {\n\t                resolve(response.data);\n\t              });\n\t          }\n\t        });\n\t      },\n\t      getDefensiveCase(configurationName) {\n\t        let self = this;\n\t        return new Promise(function(resolve, reject) {\n\t          if (!configurations.hasOwnProperty(configurationName)) {\n\t            return reject(`Configuration ${configurationName} does not exist`);\n\t          }\n\t          let configuration = configurations[configurationName];\n\t          while (configuration.cases.length) {\n\t            let confCase = configuration.cases.shift();\n\t            if (confCase.check()) {\n\t              return self.getTemplate(confCase)\n\t              .then(function(template) {\n\t                confCase.template = template;\n\t                return resolve(confCase);\n\t              });\n\t            }\n\t          }\n\t        });\n\t      }\n\t    };\n\t  }\n\n\t  static factory() {\n\t    return new DefensiveConfiguration();\n\t  }\n\n\t}\n\n\tvar moduleName$2 = 'ngDefensive.services';\n\n\tangular.module(moduleName$2, [])\n\t  .provider('DefensiveConfiguration', DefensiveConfiguration.factory);\n\n\tclass NgDefensive {\n\n\t  constructor($compile, DefensiveConfiguration) {\n\t    this.restrict = 'A';\n\t    this.scope = {\n\t      callbacks: '=ngDefensiveCallbacks'\n\t    };\n\t    this.link = function(scope, element, attrs) {\n\t      let activeCase = null;\n\t      DefensiveConfiguration.getDefensiveCase(attrs.ngDefensive)\n\t      .then(function(confCase) {\n\t        element.replaceWith($compile(confCase.template)(scope));\n\t        activeCase = confCase;\n\t      });\n\t      scope.action = function() {\n\t        scope.callbacks[activeCase.caseName]();\n\t      };\n\t    };\n\t  }\n\n\t  static factory($compile, DefensiveConfiguration) {\n\t    return new NgDefensive($compile, DefensiveConfiguration);\n\t  }\n\n\t}\n\n\tvar moduleName$1 = 'ngDefensive.directives';\n\n\tangular.module(moduleName$1, [])\n\t  .directive('ngDefensive', NgDefensive.factory);\n\n\tvar moduleName = 'ngDefensive';\n\n\tvar app = angular.module(moduleName, [\n\t\tmoduleName$1,\n\t\tmoduleName$2\n\t]);\n\n\treturn moduleName;\n\n}));"],"sourceRoot":"/source/"}